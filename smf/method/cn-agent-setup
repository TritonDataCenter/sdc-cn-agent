#!/bin/bash
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

#
# Copyright (c) 2017, Joyent, Inc.
# Copyright 2022 MNX Cloud, Inc.
#

#
# Runs on node (CN + HN) boot to setup log rotation for cn-agent logs.
#

set -o xtrace

. /lib/svc/share/smf_include.sh
. /lib/sdc/config.sh


function setup_logadm {
    # cn-agent logadm configuration:
    #
    # 1. the regular 'cn-agent' SMF log
    #
    logadm -v -r cn-agent_logs             # old pre-AGENT-840 logname
    logadm -v -w cn_agent_logs -C 168 -S 1g -c -p 1h \
        -t '/var/log/cn-agent/cn-agent_$nodename_%FT%H:%M:%S.log' \
        /var/svc/log/*cn-agent*.log

    # 2. Invocation of most (all?) cn-agent "tasks" log to a separate file
    #    under "/var/log/cn-agent/logs/" (see "/usr/vm/sbin/rotate-logs.sh" for the
    #    format of those filenames). For hourly rotation we call the rotate-logs.sh
    #    script to roll those up into "/var/log/cn-agent/cn-agent-tasks.log" and
    #    then `logadm` does the usual rotation to the '-t ...' template filename.
    #
    logadm -v -r cn-agent_task_logs        # old pre-AGENT-840 logname
    mkdir -p /var/log/cn-agent/logs/
    touch /var/log/cn-agent/cn-agent-tasks.log
    logadm -v -w cn_agent_task_logs -C 168 -S 1g -p 1h \
        -b '/usr/vm/sbin/rotate-logs.sh -m /var/log/cn-agent/logs/ /var/log/cn-agent/cn-agent-tasks.log' \
        -t '/var/log/cn-agent/cn-agent-tasks_$nodename_%FT%H:%M:%S.log' \
        /var/log/cn-agent/cn-agent-tasks.log

    # Move the smf_logs entry to run last (after the entries we just added) so
    # that the default '-C' (from
    # https://github.com/TritonDataCenter/smartos-live/blob/master/overlay/generic/etc/logadm.conf)
    # doesn't defeat our attempts to rotate out of "/var/svc/log".
    /usr/sbin/logadm -v -r smf_logs
    /usr/sbin/logadm -v -w smf_logs -C 8 -c -s 1m '/var/svc/log/*.log'
}


case "$1" in
'start')
    setup_logadm
    ;;

'stop')
    echo "'stop' not yet supported" >&2
    exit $SMF_EXIT_ERR_FATAL
    ;;

*)
    echo "Usage: $0 { start | stop }"
    exit $SMF_EXIT_ERR_FATAL
    ;;
esac
exit $SMF_EXIT_OK
